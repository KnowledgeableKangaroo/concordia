### Before running any Compose services, make sure you have an .env file
# inside your current folder and that it has been populated with the following content:
#   GRAFANA_ADMIN_PW=<grafana-admin-pw>
#   CONCORDIA_ADMIN_PW=<concordia-admin-pw>
#   POSTGRESQL_PW=<postgres-pw>
#   SENTRY_PW=<sentry_password_here>
#   SENTRY_SECRET_KEY=<sentry_secret_key_here>
#   EMAIL_HOST=<your_smtp_email_host_here>
#   EMAIL_HOST_USER=<your_smtp_email_host_user_here>
#   EMAIL_HOST_PASSWORD=<your_smtp_email_host_password_here>
#   DEFAULT_FROM_EMAIL=<your_email_from_address_here>


### Start Docker containers with the following command :
#  sudo make up

### Create grafana user and assign the grafana admin password.
#  with docker-compose running, in a separate terminal window, enter the following commands:
#
#  sudo docker exec -it concordia_grafana bash -c "./setup.sh/grafana_post_run.sh"

version: '2'
services:

  rabbit:
    essential: true
    image: rabbitmq:latest
    ports:
      - 5672
      - 15672


  app:
    essential: true
    env_file: ./.env
    image: concordia_app:latest
    volumes:
      - .:/app
      - images_volume:/concordia_images
    ports:
      - 80

    logging:
      driver: awslogs
      options: 
        awslogs-group: cf-42
        awslogs-region: us-east-2
        awslogs-stream-prefix: concordia_app

  importer:
    essential: true
    image: concordia_importer:latest

    volumes:
      - images_volume:/concordia_images

    logging:
      driver: awslogs
      options: 
        awslogs-group: cf-42
        awslogs-region: us-east-2
        awslogs-stream-prefix: concordia_importer

volumes:
  images_volume:


