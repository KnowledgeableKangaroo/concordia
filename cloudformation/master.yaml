---
AWSTemplateFormatVersion: '2010-09-09'
Description: >

    This template deploys a VPC, with a pair of public and private subnets spread 
    across two Availabilty Zones. It deploys an Internet Gateway, with a default 
    route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ), 
    and default routes for them in the private subnets.

    It then deploys a highly available ECS cluster using an AutoScaling Group, with 
    ECS hosts distributed across multiple Availability Zones. 

    Finally, it deploys a pair of example ECS services from containers published in 
    Amazon EC2 Container Registry (Amazon ECR).



Resources:

    VPC:
        Type: AWS::CloudFormation::Stack
        Properties:

            TemplateURL: "https://s3.amazonaws.com/rstorey-concordia-refarch/infrastructure/vpc.yaml"
            Parameters:
                EnvironmentName:    !Ref AWS::StackName
                VpcCIDR:            10.192.0.0/16
                PublicSubnet1CIDR:  10.192.10.0/24
                PublicSubnet2CIDR:  10.192.11.0/24
                PrivateSubnet1CIDR: 10.192.20.0/24
                PrivateSubnet2CIDR: 10.192.21.0/24


    NetworkACL:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL:  "https://s3.amazonaws.com/rstorey-concordia-refarch/infrastructure/network-acl.yaml"
            Parameters: 
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC
                PublicSubnet1: !GetAtt VPC.Outputs.PublicSubnet1
                PublicSubnet2: !GetAtt VPC.Outputs.PublicSubnet2
                PrivateSubnet1: !GetAtt VPC.Outputs.PrivateSubnet1
                PrivateSubnet2: !GetAtt VPC.Outputs.PrivateSubnet2

    SecurityGroups:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL:  "https://s3.amazonaws.com/rstorey-concordia-refarch/infrastructure/security-groups.yaml"
            Parameters: 
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC

    RDS:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL:  "https://s3.amazonaws.com/rstorey-concordia-refarch/infrastructure/rds.yaml"
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC
                DatabaseSecurityGroup: !GetAtt SecurityGroups.Outputs.DatabaseSecurityGroup
                PrivateSubnet1: !GetAtt VPC.Outputs.PrivateSubnet1
                PrivateSubnet2: !GetAtt VPC.Outputs.PrivateSubnet2

    ALB:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL:  "https://s3.amazonaws.com/rstorey-concordia-refarch/infrastructure/load-balancers.yaml"
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC
                Subnets: !GetAtt VPC.Outputs.PublicSubnets
                SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

    ECS:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL:  "https://s3.amazonaws.com/rstorey-concordia-refarch/infrastructure/ecs-cluster.yaml"
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC
                SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
                Subnets: !GetAtt VPC.Outputs.PrivateSubnets

    ConcordiaService:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: "https://s3.amazonaws.com/rstorey-concordia-refarch/services/concordia-service/service.yaml"
            Parameters:
                VPC: !GetAtt VPC.Outputs.VPC
                Cluster: !GetAtt ECS.Outputs.Cluster
                DesiredCount: 2
                Listener: !GetAtt ALB.Outputs.Listener
                Path: /*
                ECSServiceAutoScalingRoleARN: !GetAtt ECS.Outputs.ECSServiceAutoScalingRole

    LifecycleHook:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL:  "https://s3.amazonaws.com/rstorey-concordia-refarch/infrastructure/lifecyclehook.yaml"
            Parameters:
                Cluster: !GetAtt ECS.Outputs.Cluster
                ECSAutoScalingGroupName: !GetAtt ECS.Outputs.ECSAutoScalingGroupName

Outputs:

    ProductServiceUrl: 
        Description: The URL endpoint for the product service
        Value: !Join [ "/", [ !GetAtt ALB.Outputs.LoadBalancerUrl, "products" ]]

    WebsiteServiceUrl: 
        Description: The URL endpoint for the website service
        Value: !Join ["", [ !GetAtt ALB.Outputs.LoadBalancerUrl, "/" ]]
